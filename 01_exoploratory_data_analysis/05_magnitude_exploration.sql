/*
==================== Magnitude Analysis ====================

Purpose: To quantify data and group results by specific dimensions.
         For understanding data distribution across categories.

SQL Functions Used:
    - Aggregate Functions: SUM(), COUNT(), AVG()
    - GROUP BY, ORDER BY
============================================================================
*/

-- Find total customers by countries
SELECT 
country,
COUNT(customer_key) AS total_customers FROM gold.dim_customers 
GROUP BY country 
ORDER BY total_customers DESC ;

-- Find total customers by gender
SELECT 'male_customers' AS gender,  COUNT(customer_key) AS customers_count  FROM gold.dim_customers where gender = 'male'
UNION ALL
SELECT 'female_customers',  COUNT(customer_key) AS customers_count  FROM gold.dim_customers where gender = 'female'
UNION ALL 
SELECT 'n/a', COUNT(customer_key) AS customers_count FROM gold.dim_customers WHERE gender !='male' and gender != 'female';

------------------------
SELECT 
gender,
COUNT(customer_key) AS total_customers FROM gold.dim_customers 
GROUP BY gender 
ORDER BY total_customers DESC ;


-- Find total products by category
SELECT 
category, 
COUNT(product_key) AS product_count
 FROM gold.dim_products 
 GROUP BY category
ORDER BY product_count DESC;

-- What is average costs in each category?
SELECT 
category,
AVG(cost) AS avg_cost 
FROM gold.dim_products 
GROUP BY category
ORDER BY avg_cost DESC;

-- What is the total revenue for each category ?
SELECT
p.category,
SUM(f.sales_amounts) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
ON p.product_key = f.product_key
GROUP BY p.category
ORDER BY total_revenue DESC;


-- Find total revenue generated by each customer
-- !!! big performance issue if tables are switched for select and join !!!
SELECT
c.customer_key,
c.first_name,
c.last_name,
SUM(s.sales_amounts) AS total_revenue
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c 
ON c.customer_key = s.customer_key
GROUP BY c.customer_key, c.first_name, c.last_name
ORDER BY total_revenue DESC;


-- What is the distribution of sold items accross countries ?
SELECT
c.country,
SUM(s.quantity) AS total_sold_items
FROM gold.fact_sales s
LEFT JOIN gold.dim_customers c 
ON c.customer_key = s.customer_key
GROUP BY c.country
ORDER BY total_sold_items DESC;